#!/bin/bash
set -e

#######################################
#	Description
#		new_client name
#
#	Arguments:
#		name (string): name of new client
#	Outputs:
#		keys and .ovpn files
#	Returns:
#		1 upon error
#		0 otherwise
#######################################
function main() {
	local readonly USAGE="Usage: new_client name"

	if [[ "${#}" -ne 1 ]]; then
		err "Error: one argument required, ${#} received"
		err "${USAGE}"
		return 1
	fi

	if [ "${EUID}" -ne 0 ]; then
		err "Please run as root"
		return 2
	fi

	local readonly client="${1}"

	# Set env
	[[ -z "${EASYRSA}" ]] && export EASYRSA=/etc/easy-rsa
	[[ -z "${EASYRSA_VARS_FILE}" ]] && export EASYRSA_VARS_FILE=/etc/easy-rsa/vars
	
	# Create client keys
	easyrsa gen-req "${client}" nopass
	easyrsa sign-req client "${client}"

	# Move to /etc/openvpn
	cp "/etc/easy-rsa/pki/private/${client}.key" /etc/openvpn/client/
	cp "/etc/easy-rsa/pki/issued/${client}.crt" /etc/openvpn/client/
	rm "/etc/easy-rsa/pki/reqs/${client}.req"


cat <<EOF >>/etc/openvpn/client/$client@$HOSTNAME.ovpn
# OpenVPN client config

client
dev tun
remote REMOTE_IP 1194 udp
resolv-retry infinite
nobind
persist-key
persist-tun
verb 4

auth SHA512
auth-nocache
cipher AES-256-GCM

tls-client
tls-version-min 1.3
tls-cipher TLS-DHE-RSA-WITH-AES-128-GCM-SHA256

remote-cert-tls server

###
###     Keys and certificates
###

# ca.crt
<ca>
$(cat /etc/openvpn/server/ca.crt)
</ca>

# $client.crt
<cert>
$(cat /etc/openvpn/client/$client.crt)
</cert>

# $client.key
<key>
$(cat /etc/openvpn/client/$client.key)
</key>

# ta.key
<tls-crypt>
$(cat /etc/openvpn/server/ta.key)
</tls-crypt>
EOF

	return 0
}

main "${@}"; exit
