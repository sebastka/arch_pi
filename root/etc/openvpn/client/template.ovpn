#
#	OpenVPN Client config
#	- Default config: https://github.com/OpenVPN/openvpn/blob/master/sample/sample-config-files/server.conf
#	- Man page: https://build.openvpn.net/man/openvpn-2.5/openvpn.8.html
#
#	Ressources:
#	- https://blog.securityevaluators.com/hardening-openvpn-in-2020-1672c3c4135a
#	- https://www.eduvpn.org/openvpn-and-modern-crypto-part-iii/
#	- https://openvpn.net/community-resources/hardening-openvpn-security/
#

## Generic Options
auth-nocache
persist-key						# Keep the key in memory, don't read again from disk
status openvpn-status.log 30				# Write status to file every n seconds
status-version 2

## Log Options
errors-to-stderr					# Output errors to stderr instead of stdout unless log output is redirected by one of the --log options
;log openvpn.log					# Output logging messages to file, including output to stdout/stderr which is generated by called scripts (If file already exists it will be truncated)
verb 4							# Set output verbosity to n (default 1)

## Protocol Options
allow-compression no					# As described in the --compress option, compression is a potentially dangerous option
auth SHA512						# Authenticate data channel packets and (if enabled) tls-auth control channel packets with HMAC using message digest algorithm alg (The default is SHA1)
;cipher AES-256-GCM					# DEPRECATED Encrypt data channel packets with cipher algorithm alg. This option is deprecated for server-client mode.
							# Option --data-ciphers or possibly --data-ciphers-fallback should be used instead
data-ciphers AES-256-GCM				# Restrict the allowed ciphers to be negotiated to the ciphers in cipher-list
;ncp-disable						# DEPRECATED Disable "Negotiable Crypto Parameters". This completely disables cipher negotiation

## Client Options
allow-pull-fqdn					
;client							# EXPENDS A helper directive designed to simplify the configuration of OpenVPN's client mode. This directive is equivalent to: 'pull; tls-client'
;client-nar args					# This pushable client option sets up a stateless one-to-one NAT rule on packet addresses (not ports),
							# and is useful in cases where routes or ifconfig settings pushed to the client would create an IP numbering conflict.
connect-retry 5 300					# Wait n seconds between connection attempts (default 5).
							# Repeated reconnection attempts are slowed down after 5 retries per remote by doubling the wait time after each unsuccessful attempt.
							# An optional argument max specifies the maximum value of wait time in seconds at which it gets capped (default 300)
explicit-exit-notify 1					# In client mode, on exit/restart, this option will tell the server to immediately close its client instance object rather than waiting for a timeout.
							# The n parameter (default 1 if not present) controls the maximum number of attempts that the client will try to resend the exit notification message
inactive 60						# Causes OpenVPN to exit after n seconds of inactivity on the TUN/TAP device. The time length of inactivity is measured since the last incoming or outgoing tunnel packet.
							# The default value is 0 seconds, which disables this feature
pull							# This option must be used on a client which is connecting to a multi-client server.
							# It indicates to OpenVPN that it should accept options pushed by the server, provided they are part of the legal set of pushable options (note that the --pull option is implied by --client)
remote CONFIG_SERVER_REMOTE_URL CONFIG_OPENVPN_EXTERNAL_PORT udp4			# Remote host name or IP address, port and protocol.
resolv-retry 5						# If hostname resolve fails for --remote, retry resolve for n seconds before failing

## Encryption Options
#reneg-sec 3600 3240					# Renegotiate data channel key after at most max seconds (default 3600) and at least min seconds (default is 90% of max for servers, and equal to max for clients)
reneg-sec 3600

## TLS Mode Options
ecdh-curve secp521r1					# Specify the curve to use for elliptic curve Diffie Hellman. Available curves can be listed with --show-curves. The specified curve will only be used for ECDH TLS-ciphers
hand-window 10						# Handshake Window -- the TLS-based key exchange must finalize within n seconds of handshake initiation by any peer (default 60 seconds).
							# If the handshake fails we will attempt to reset our connection with our peer and try again
remote-cert-tls server					# EXPENDS Require that peer certificate was signed with an explicit key usage and extended key usage based on RFC3280 TLS rules.
							# This is a useful security option for clients, to ensure that the host they connect to is a designated server.
							# Or the other way around; for a server to verify that only hosts with a client certificate can connect
;tls-auth file n					# Add an additional layer of HMAC authentication on top of the TLS control channel to mitigate DoS attacks and attacks on the TLS stack.
							# Use --tls-crypt instead if you want to use the key file to not only authenticate, but also encrypt the TLS control channel.
;tls-cipher TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384	# These setting can be used to ensure that certain cipher suites are used (or not used) for the TLS connection.
							# Open‚ÄêVPN uses TLS to secure the control channel, over which the keys that are used to protect the actual VPN traffic are exchanged. For OpenSSL, the --tls-cipher is used for TLS 1.2 and below
tls-ciphersuites TLS_AES_256_GCM_SHA384			# Same as --tls-cipher but for TLS 1.3 and up. mbed TLS has no TLS 1.3 support yet and only the --tls-cipher setting is used. See: --show-tls
tls-client						# Enable TLS and assume client role during TLS handshake.
tls-exit						# Exit on TLS negotiation failure
tls-timeout 2						# Packet retransmit timeout on TLS control channel if no acknowledgment from remote within n seconds (default 2).
							# When OpenVPN sends a control packet to its peer, it will expect to receive an acknowledgement within n seconds or it will retransmit the packet, subject to a TCP-like exponential backoff algorithm
tls-version-min 1.3					# Sets the minimum TLS version we will accept from the peer (default is "1.0")
verify-x509-name 'CN=CONFIG_OPENVPN_COMMON_NAME'				# Accept connections only if a host's X.509 name is equal to name. The remote host must also pass all other tests of verification

## Network Configuration
;bind							# Bind to local address and port
;float							# Allow remote peer to change its IP address and/or port number, such as due to DHCP (this is the default if --remote is not used)
keepalive 10 60						# EXPENDS (keepalive ping-interval timeout) This option can be used on both client and server side, but it is enough to add this on the server side
							# as it will push appropriate --ping and --ping-restart options to the client. If used on both server and client, the values pushed from server will override the client local values.
;local 192.189.0.12					# Local host name or IP address for bind. If specified, OpenVPN will bind to this address only
mode p2p						# Set OpenVPN major mode. By default, OpenVPN runs in point-to-point mode (p2p). OpenVPN 2.0 introduces a new mode (server) which implements a multi-client server capability
nobind							# Do not bind to local address and port. The IP stack will allocate a dynamic port for returning packets.
							# Since the value of the dynamic port could not be known in advance by a peer, this option is only suitable for peers which will be initiating connections by using the --remote option

## Virtual Network Adapter (VPN Interface)
dev tun							# TUN/TAP virtual network device which can be tunX, tapX, null or an arbitrary name string (X can be omitted for a dynamic device)
persist-tun						# Don't close and reopen TUN/TAP device or run up/down scripts across SIGUSR1 or --ping-restart restarts
redirect-gateway def1					# Automatically execute routing commands to cause all outgoing IP traffic to be redirected over the VPN. This is a client-side option.
;route-gateway arg					# Specify a default gateway for use with --route. If dhcp is specified as the parameter, the gateway address will be extracted from a DHCP negotiation with the OpenVPN server-side LAN
;route-nopull						# When used with --client or --pull, accept options pushed by server EXCEPT for routes, block-outside-dns and dhcp options like DNS servers.
topology subnet						# Configure virtual addressing topology when running in --dev tun mode. This directive has no meaning in --dev tap mode, which always uses a subnet topology

# Windows-Specific Options
;block-outside-dns					# Block DNS servers on other network adapters to prevent DNS leaks. This option prevents any application from accessing TCP or UDP port 53 except one inside the tunnel.
							# It uses Windows Filtering Platform (WFP) and works on Windows Vista or later.
;register-dns						# Run ipconfig /flushdns and ipconfig /registerdns on connection initiation. This is known to kick Windows into recognizing pushed DNS servers

#
#	Embedded files
#

# Server cert (ca.crt)
<ca>
</ca>

# Client cert (client.crt)
<cert>
</cert>

# Client key (client.key)
<key>
</key>

# Shared-secret key (ta.key)
<tls-crypt>
</tls-crypt>